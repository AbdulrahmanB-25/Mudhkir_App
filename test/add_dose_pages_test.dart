import 'package:flutter_test/flutter_test.dart';
import 'package:flutter/material.dart';
import 'package:mudhkir_app/Pages/Add_Medicaiton/Add_Dosage.dart';
import 'package:mudhkir_app/Pages/Add_Medicaiton/Add_Name_Picture.dart';
import 'package:mudhkir_app/Pages/Add_Medicaiton/Add_Start_&_End_Date.dart';

/// -------------------------------------------------------------------------
/// Test Suite for Add Medication Pages
///
/// ▸ Unit Tests: Validate individual widgets and isolated behaviors.
/// ▸ Integration Tests: Validate navigation and interaction across multiple widgets.
/// ▸ No System Tests (system tests involve full app flows, backend, databases).
/// -------------------------------------------------------------------------

void main() {
  // ▸ UNIT TEST: Testing AddNamePicturePage alone
  group('AddNamePicturePage Tests', () {
    testWidgets('renders text field and next button', (WidgetTester tester) async {
      await tester.pumpWidget(
        MaterialApp(
          home: Scaffold(
            body: AddNamePicturePage(
              formKey: GlobalKey<FormState>(),
              nameController: TextEditingController(),
              medicineNamesFuture: Future.value(['TestMed']),
              capturedImage: null,
              uploadedImageUrl: null,
              onPickImage: () {},
              onNext: () {},
              onBack: () {},
            ),
          ),
        ),
      );

      await tester.pumpAndSettle(); // Wait for FutureBuilder to complete

      expect(find.byType(TextFormField), findsOneWidget);
      expect(find.text('التالي'), findsOneWidget);
    });
  });

  // ▸ UNIT TEST: Testing AddDosagePage alone
  group('AddDosagePage Tests', () {
    testWidgets('renders dosage form and shows days of the week', (WidgetTester tester) async {
      await tester.pumpWidget(
        MaterialApp(
          home: Scaffold(
            body: AddDosagePage(
              formKey: GlobalKey<FormState>(),
              dosageController: TextEditingController(),
              dosageUnit: 'ملغم',
              dosageUnits: ['ملغم', 'غرام'],
              frequencyType: 'يومي',
              frequencyTypes: ['يومي', 'اسبوعي'],
              frequencyNumber: 2,
              frequencyNumbers: [1, 2, 3],
              selectedTimes: [null, null],
              isAutoGeneratedTimes: [false, false],
              selectedWeekdays: {1, 3},
              weeklyTimes: {},
              weeklyAutoGenerated: {},
              onDosageUnitChanged: (_) {},
              onFrequencyNumberChanged: (_) {},
              onFrequencyTypeChanged: (_) {},
              onSelectTime: (_) {},
              onWeekdaySelected: (_, __) {},
              onSelectWeeklyTime: (_) {},
              onApplySameTimeToAllWeekdays: () {},
              onNext: () {},
              onBack: () {},
              getDayName: (day) => ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'][day - 1],
            ),
          ),
        ),
      );

      await tester.pumpAndSettle();

      expect(find.text('الجرعة والأوقات'), findsOneWidget);
      expect(find.byType(DropdownButtonFormField<String>), findsWidgets);
    });
  });

  // ▸ UNIT TEST: Testing AddStartEndDatePage alone
  group('AddStartEndDatePage Tests', () {
    testWidgets('renders start and end date pickers', (WidgetTester tester) async {
      await tester.pumpWidget(
        MaterialApp(
          home: Scaffold(
            body: AddStartEndDatePage(
              formKey: GlobalKey<FormState>(),
              startDate: DateTime.now(),
              endDate: DateTime.now().add(const Duration(days: 5)),
              onSelectStartDate: () {},
              onSelectEndDate: () {},
              onSubmit: () {},
              onBack: () {},
            ),
          ),
        ),
      );

      await tester.pumpAndSettle();

      expect(find.text('تاريخ البدء والانتهاء'), findsOneWidget);
      expect(find.text('تاريخ البدء'), findsOneWidget);
      expect(find.text('تاريخ الانتهاء'), findsOneWidget);
    });
  });

  // ▸ INTEGRATION TEST: Testing navigation across AddNamePicturePage -> AddDosagePage -> AddStartEndDatePage
  group('Combined Integration Tests', () {
    testWidgets('navigates between AddNamePicturePage -> AddDosagePage -> AddStartEndDatePage', (WidgetTester tester) async {
      final pageController = PageController();

      await tester.pumpWidget(
        MaterialApp(
          home: Scaffold(
            body: PageView(
              controller: pageController,
              children: [
                AddNamePicturePage(
                  formKey: GlobalKey<FormState>(),
                  nameController: TextEditingController(),
                  medicineNamesFuture: Future.value(['TestMed']),
                  capturedImage: null,
                  uploadedImageUrl: null,
                  onPickImage: () {},
                  onNext: () {
                    pageController.nextPage(duration: const Duration(milliseconds: 300), curve: Curves.easeInOut);
                  },
                  onBack: () {},
                ),
                AddDosagePage(
                  formKey: GlobalKey<FormState>(),
                  dosageController: TextEditingController(),
                  dosageUnit: 'ملغم',
                  dosageUnits: ['ملغم', 'غرام'],
                  frequencyType: 'يومي',
                  frequencyTypes: ['يومي', 'اسبوعي'],
                  frequencyNumber: 2,
                  frequencyNumbers: [1, 2, 3],
                  selectedTimes: [null, null],
                  isAutoGeneratedTimes: [false, false],
                  selectedWeekdays: {1, 2},
                  weeklyTimes: {},
                  weeklyAutoGenerated: {},
                  onDosageUnitChanged: (_) {},
                  onFrequencyNumberChanged: (_) {},
                  onFrequencyTypeChanged: (_) {},
                  onSelectTime: (_) {},
                  onWeekdaySelected: (_, __) {},
                  onSelectWeeklyTime: (_) {},
                  onApplySameTimeToAllWeekdays: () {},
                  onNext: () {
                    pageController.nextPage(duration: const Duration(milliseconds: 300), curve: Curves.easeInOut);
                  },
                  onBack: () {
                    pageController.previousPage(duration: const Duration(milliseconds: 300), curve: Curves.easeInOut);
                  },
                  getDayName: (day) => ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'][day - 1],
                ),
                AddStartEndDatePage(
                  formKey: GlobalKey<FormState>(),
                  startDate: DateTime.now(),
                  endDate: DateTime.now().add(const Duration(days: 5)),
                  onSelectStartDate: () {},
                  onSelectEndDate: () {},
                  onSubmit: () {},
                  onBack: () {},
                ),
              ],
            ),
          ),
        ),
      );

      await tester.pumpAndSettle();

      // Page 1
      expect(find.text('إضافة دواء جديد'), findsOneWidget);

      // 🚀 Force jump to Page 2
      pageController.jumpToPage(1);
      await tester.pumpAndSettle();
      expect(find.byType(DropdownButtonFormField<String>), findsWidgets);

      // 🚀 Force jump to Page 3
      pageController.jumpToPage(2);
      await tester.pumpAndSettle();
      expect(find.text('تاريخ البدء والانتهاء'), findsOneWidget);
    });
  });
}
